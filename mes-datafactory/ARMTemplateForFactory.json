{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mes-datafactory"
		},
		"CloudSQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CloudSQL'"
		},
		"JsonBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'JsonBlob'"
		},
		"LocalSQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LocalSQL'"
		},
		"OnPremFile_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPremFile'"
		},
		"SrcFile_Trigger_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SrcFile_Trigger'"
		},
		"SrcLookupFile_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SrcLookupFile'"
		},
		"Src_Blob_Input_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Src_Blob_Input'"
		},
		"Src_CloudExcelBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Src_CloudExcelBlob'"
		},
		"Src_Employee_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Src_Employee'"
		},
		"Target_Cosmos_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Target_Cosmos'"
		},
		"src_blob_csv_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'src_blob_csv'"
		},
		"tar_container_csv_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'tar_container_csv'"
		},
		"OnPremFile_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\W10GNYQ8Y2.amer.dell.com\\\\Emp Files"
		},
		"OnPremFile_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "kishore"
		},
		"File_EventTrigger_properties_FileTrigger_parameters_Filename_pl": {
			"type": "string",
			"defaultValue": "@triggerBody().filename"
		},
		"File_EventTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/4d9c544b-c514-4ef2-9d53-206b02124daa/resourceGroups/MES_BI/providers/Microsoft.Storage/storageAccounts/gen2dellstorage"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FileTrigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@pipeline().parameters.Filename_pl",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_8fa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"parameters": {
					"Filename_pl": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-04-17T03:44:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_8fa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_BlobExcel2SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TransactionhistoryWithCost",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CloudSQL_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-14T02:18:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TransactionhistoryWithCost')]",
				"[concat(variables('factoryId'), '/datasets/CloudSQL_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_CloudSQL2Comos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy-CloudSQL to Cosmos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CloudSQL_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Ds_Cosmos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-17T01:49:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CloudSQL_Table')]",
				"[concat(variables('factoryId'), '/datasets/Ds_Cosmos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_Delete_Files_from Storage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DestinationDataset_8fa",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childitems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DestinationDataset_8fa",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": {
												"value": "@{item().name}",
												"type": "Expression"
											},
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-13T03:47:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_8fa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_Excel_Switch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.Action",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Copy",
									"activities": [
										{
											"name": "Copy data1",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "ExcelSource",
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												},
												"sink": {
													"type": "AzureSqlSink",
													"tableOption": "autoCreate"
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "TransactionhistoryWithCost",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "CloudSQL_Table",
													"type": "DatasetReference",
													"parameters": {}
												}
											]
										}
									]
								},
								{
									"value": "Delete",
									"activities": [
										{
											"name": "Delete1",
											"type": "Delete",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"dataset": {
													"referenceName": "TransactionhistoryWithCost",
													"type": "DatasetReference",
													"parameters": {}
												},
												"enableLogging": false,
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"Action": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-15T00:59:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TransactionhistoryWithCost')]",
				"[concat(variables('factoryId'), '/datasets/CloudSQL_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_Filter_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get File Names",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Src_MultipleFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter Files with txt",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get File Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File Names').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'txt')",
								"type": "Expression"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-16T01:25:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Src_MultipleFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_Lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('FIlename')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('Select count(1) as count from ', item())",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "LocalSQL_VariableDemo",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"FIlename": {
						"type": "Array",
						"defaultValue": [
							"LIGHT",
							"WEATHER",
							"Calendar"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-11T16:25:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LocalSQL_VariableDemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_MovingFiles_src2Tar')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Src_MultipleFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.Childitems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Src_MultipleFiles",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_8fa",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-07T06:05:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Src_MultipleFiles')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_8fa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_RunningDataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "First DataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Excel2Blob_DeriveedDate",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ExcelSrc": {},
									"BlobTarget": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-21T02:03:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Excel2Blob_DeriveedDate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_SQLTable_OnPrem2Cloud')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "LocalSQL_VariableDemo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CloudSQL_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-14T02:06:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LocalSQL_VariableDemo')]",
				"[concat(variables('factoryId'), '/datasets/CloudSQL_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_Until_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until activity",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('UntilFlag'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait for 2 Secs",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 2
									}
								},
								{
									"name": "Look for Refreshed Status",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Wait for 2 Secs",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "select status from t_status",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "CloudSQL_Table",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Look for Refreshed Status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Look for Refreshed Status').output.firstrow.status,'Y')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "UntilFlag",
													"value": "True"
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Until activity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TransactionhistoryWithCost",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CloudSQL_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"UntilFlag": {
						"type": "String",
						"defaultValue": "False"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T02:15:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TransactionhistoryWithCost')]",
				"[concat(variables('factoryId'), '/datasets/CloudSQL_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_Variable_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('TableList')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@item()",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "LocalSQL_VariableDemo",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_8fa",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"variables": {
					"TableList": {
						"type": "Array",
						"defaultValue": [
							"Select * from LIGHT",
							"select * from WEATHER",
							"Select * from Calendar"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-11T10:40:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LocalSQL_VariableDemo')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_8fa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_Wait activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait for 5 Secs",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait for 5 Secs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TransactionhistoryWithCost",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CloudSQL_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-16T01:30:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TransactionhistoryWithCost')]",
				"[concat(variables('factoryId'), '/datasets/CloudSQL_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_cp_csv_in2out')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Moving/copying the file from one container to another container",
				"activities": [
					{
						"name": "Copy_8fa",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//Cricket.txt"
							},
							{
								"name": "Destination",
								"value": "output//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "input",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_8fa",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_8fa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-07T06:05:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_8fa')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_8fa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dynamic_5files2SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-18T04:10:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sql2File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LIGHT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LIGHT",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "LIGHT_CONDITION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LIGHT_CONDITION",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Light",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_8fa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-08T05:34:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Light')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_8fa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudSQL_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CloudSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CloudSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SrcFile_Trigger",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"container": "trigger"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SrcFile_Trigger')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SrcLookupFile",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ADF_Lookupfiles.csv",
						"container": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sno",
						"type": "String"
					},
					{
						"name": "container",
						"type": "String"
					},
					{
						"name": "folder",
						"type": "String"
					},
					{
						"name": "file",
						"type": "String"
					},
					{
						"name": "desttbl",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SrcLookupFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_8fa')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "tar_container_csv",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/tar_container_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Cosmos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Target_Cosmos",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "t_employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Target_Cosmos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Emp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Src_Employee",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Employee_Salary_Bin.txt",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Eid",
						"type": "String"
					},
					{
						"name": "Ename",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Did",
						"type": "String"
					},
					{
						"name": "JoinDt",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Src_Employee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalSQL_VariableDemo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "LIGHT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LocalSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Light')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "LIGHT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LIGHT_CONDITION",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LIGHT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LocalSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_8fa')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "src_blob_csv",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Cricket.txt",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "score",
						"type": "String"
					},
					{
						"name": "teamjoined",
						"type": "String"
					},
					{
						"name": "level",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/src_blob_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Src_MultipleFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "src_blob_csv",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/src_blob_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransactionhistoryWithCost')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Src_CloudExcelBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "UIP_Transaction History With Co",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "UIP_Transaction History With Cost Report.xlsx",
						"container": "input"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Src_CloudExcelBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('CloudSQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('JsonBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "My local instance",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LocalSQL_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IRSQLServerkishore",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IRSQLServerkishore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremFile')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('OnPremFile_properties_typeProperties_host')]",
					"userId": "[parameters('OnPremFile_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPremFile_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IRSQLServerkishore",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IRSQLServerkishore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SrcFile_Trigger')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('SrcFile_Trigger_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SrcLookupFile')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('SrcLookupFile_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Src_Blob_Input')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Src_Blob_Input_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Src_CloudExcelBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Src_CloudExcelBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Src_Employee')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Src_Employee_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Target_Cosmos')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('Target_Cosmos_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_blob_csv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('src_blob_csv_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tar_container_csv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('tar_container_csv_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/File_EventTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FileTrigger",
							"type": "PipelineReference"
						},
						"parameters": {
							"Filename_pl": "[parameters('File_EventTrigger_properties_FileTrigger_parameters_Filename_pl')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/trigger/blobs/",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('File_EventTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FileTrigger')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRSQLServerkishore')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Emp_Pivot')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Ds_Emp",
								"type": "DatasetReference"
							},
							"name": "Emp"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DestinationDataset_8fa",
								"type": "DatasetReference"
							},
							"name": "Sink2Blob"
						}
					],
					"transformations": [
						{
							"name": "Salary"
						}
					],
					"script": "source(output(\n\t\tEid as short,\n\t\tEname as string,\n\t\tSalary as integer,\n\t\tDid as short,\n\t\tJoinDt as date\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tignoreNoFilesFound: false) ~> Emp\nEmp pivot(pivotBy(Did),\n\tSalary = sum(Salary),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Salary\nSalary sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink2Blob"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_Emp')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_8fa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel2Blob_DeriveedDate')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TransactionhistoryWithCost",
								"type": "DatasetReference"
							},
							"name": "ExcelSrc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DestinationDataset_8fa",
								"type": "DatasetReference"
							},
							"name": "BlobTarget"
						}
					],
					"transformations": [
						{
							"name": "AddDatetime"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "ModifyColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "CountItems"
						}
					],
					"script": "source(output(\n\t\t{Item number} as string,\n\t\t{Item Name} as string,\n\t\tConfiguration as string,\n\t\t{From Zone Group Id} as string,\n\t\t{To Zone Group Id} as string,\n\t\t{From Warehouse} as string,\n\t\t{To Warehouse} as string,\n\t\t{From Location} as string,\n\t\t{To Location} as string,\n\t\tSite as string,\n\t\t{Service tag} as string,\n\t\t{Serial number} as string,\n\t\t{Inventory status} as string,\n\t\t{TRANSACTION TYPE} as string,\n\t\t{License plate} as string,\n\t\t{Inventoryreason ID} as string,\n\t\tTrackingnumber as string,\n\t\tReference as string,\n\t\tNumber as string,\n\t\tReceipt as string,\n\t\tIssue as string,\n\t\tQuantity as short,\n\t\t{Pay after use} as boolean,\n\t\t{Standard Cost} as double,\n\t\t{Transaction cost} as double,\n\t\t{User ID} as string,\n\t\t{Commodity Code} as string,\n\t\tISEMC as boolean,\n\t\t{Physical date} as string,\n\t\t{Financial date} as string,\n\t\t{Voucher Id} as string,\n\t\t{Msg Id} as string,\n\t\t{Manifest ID} as string,\n\t\t{Status Ack} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExcelSrc\nConditionalSplit1@Split derive(LoadDateTime = currentDate()) ~> AddDatetime\nModifyColumns1 split(startsWith({Item number},'4'),\n\tdisjoint: false) ~> ConditionalSplit1@(Split)\nExcelSrc derive({Item number} = lower({Item number})) ~> ModifyColumns1\nAddDatetime aggregate(groupBy({Item number}),\n\tTotal_Items = countDistinct({Item number})) ~> CountItems\nCountItems sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BlobTarget"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TransactionhistoryWithCost')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_8fa')]"
			]
		}
	]
}